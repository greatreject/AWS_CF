AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates:
  VPC with 3 Tiers (Tier 1 -Public, Tier 2 - Application and Tier 3 -Database) with the option to create a Tier 2 Mgt subnet
  across one AZ
  with NAT Gateway

Metadata:
  Stack:
    Value: 0
  VersionDate:
    Value: 20190725
  Identifier:
    Value: main
  Input:
    Description: Input of all required parameters in the stack
  Output:
    Description: N/A
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General Configuration
      Parameters:
      - AvailabilityZones
      - Environment
      - NameofRegion
      - EngieAccountID
      - EngieVPCID
    - Label:
        default: Network Configuration
      Parameters:
      - VPCCIDR
      - PublicSubnetACIDR
      - PrivateSubnetACIDR
      - MgtSubnet      
      - MgtSubnetACIDR
      - SecuredSubnetACIDR
      - InternetGateway
      - VPCTenancy
    - Label:
        default: Optional Features
      Parameters:
      - NATGateway
      - FlowLog
    - Label:
        default: Business Identification
      Parameters:
      - BusinessUnit
      - CostCenter
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      Environment:
        default: Environment
      NameofRegion:
        default: Region
      EngieVPCID:
        default: ENGIE VPC ID
      VPCCIDR:
        default: VPC CIDR
      PublicSubnetACIDR:
        default: Public - Tier 1 - Subnet A CIDR - (Internet, only HTTP and HTTPS for Inbound traffic)
      PrivateSubnetACIDR:
        default: Private - Tier 2 - Subnet A CIDR (Application)
      MgtSubnet:
        default: Create a Management Subnet (Optional)
      MgtSubnetACIDR:
        default: Private - Tier 2 - Subnet A CIDR (Management)
      SecuredSubnetACIDR:
        default: Private - Tier 3 - Subnet A CIDR (Database)
      InternetGateway:
        default: Internet gateway ID
      NATGateway:
        default: Install a NAT Gateway
      FlowLog:
        default: Install FlowLog        
      VPCTenancy:
        default: VPC Tenancy
      BusinessUnit:
        default: Business Unit identifiers
      CostCenter:
        default: Cost Center

Parameters:
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC.
      Note:The logical order is preserved. Use only 2 AZs!'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  Environment:
    Description: 'Environment type Production = prd; Development = dev; Pre Production = uat'
    AllowedValues:
    - prd
    - dev
    - uat
    Type: String
    Default: dev
  NameofRegion:
    Description: 'Region value used in Name tags string : Ireland = euw1; United Kingdom = euw2"  (example : igw-euw1-dev-xxx)'
    Type: String
    Default: euw2
  EngieVPCID:
    Description: 'ENGIE allocated VPC ID"   (example : es01)'
    Type: String
    Default: xx01
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/22
    Description: CIDR block for the VPC
    Type: String
  PublicSubnetACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/25
    Description: "CIDR block for the public DMZ subnet located in Availability Zone A"
    Type: String
  PrivateSubnetACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.2.0/24
    Description: "CIDR block for Tier 2 private subnet located in Availability Zone A"
    Type: String
   MgtSubnet:
    AllowedValues:
    - Create Management Subnet
    - No Management Subnet
    Default: No Management Subnet
    Description: "Install a Management Subnet in each AZ"
    Type: String
  MgtSubnetACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.1.0/25
    Description: "CIDR block for Tier 2 private Management subnet located in Availability Zone A"
    Type: String
  SecuredSubnetACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.1.0/25
    Description: "CIDR block for Tier 3 private subnet located in Availability Zone A"
    Type: String
  VPCTenancy:
    AllowedValues:
    - default
    - dedicated
    Default: default
    Description: "The allowed tenancy of instances launched into the VPC"
    Type: String
  NATGateway:
    AllowedValues:
    - Install NAT Gateway
    - No NAT Gateway
    Default: Install NAT Gateway
    Description: "Install a NAT Gateway in each AZ"
    Type: String
  FlowLog:
    AllowedValues:
    - Install FlowLog
    - No FlowLog
    Default: Install FlowLog
    Description: "Install FlowLog for this VPC"
    Type: String
  BusinessUnit:
    Description: "Business Unit identifiers"
    Default: BU07
    Type: String
  CostCenter:
    Description: "Cost Center for Billing"
    Default: HQ - ENGIE UK
    Type: String

Conditions: 
  CreateResource1: !Equals [ !Ref NATGateway, Install NAT Gateway ]
  CreateResource2: !Equals [ !Ref FlowLog, Install FlowLog ]
  CreateResource3: !Equals [ !Ref MgtSubnet, Create Management Subnet ]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VPCCIDR
      InstanceTenancy:
        Ref: VPCTenancy
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - vpc
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - Ref: EngieVPCID                             
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - igw
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - Ref: EngieVPCID   
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  ### PUBLIC SUBNETS
  ### SBN - PUBLIC SUBNETS - TIER 1
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnetACIDR
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - sbn
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - pub
            - "-"
            - t1 
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - rtb
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - pub
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  PublicSubnetRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetA
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PublicSubnetNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - acl
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - pub
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  PublicSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetA
      NetworkAclId:
        Ref: PublicSubnetNetworkAcl
  ### INBOUND traffic Network Access Lists - PUBLIC SUBNETS
  # Allows Inbound HTTP traffic from the Internet to the Public subnet.
  NACLRuleAllowHTTPIngressPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      Protocol: 6
      PortRange:
        From: 80
        To: 80
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: !Ref PublicSubnetNetworkAcl
  # Allows Inbound HTTPS traffic from the Internet to the Public subnet.
  NACLRuleAllowHTTPSIngressPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      Protocol: 6
      PortRange:
        From: 443
        To: 443
      RuleAction: allow
      RuleNumber: 110
      NetworkAclId: !Ref PublicSubnetNetworkAcl
  # Allows Inbound traffic for unprivileged port to the Public subnet.      
  NACLRuleAllowCustomTCPIngressPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      Protocol: 6
      PortRange:
        From: 1025
        To: 65535
      RuleAction: allow
      RuleNumber: 120
      NetworkAclId: !Ref PublicSubnetNetworkAcl
  ### OUTBOUND traffic Network Access Lists
  # Allows outbound HTTP traffic from the public subnet to the Internet.
  NACLRuleAllowHTTPEgressPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: 6
      PortRange:
        From: 80
        To: 80
      RuleAction: allow
      RuleNumber: 200
      NetworkAclId: !Ref PublicSubnetNetworkAcl      
  # Allows outbound HTTPS traffic from the subnet to the Internet.
  NACLRuleAllowHTTPSEgressPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: 6
      PortRange:
        From: 443
        To: 443
      RuleAction: allow
      RuleNumber: 210
      NetworkAclId: !Ref PublicSubnetNetworkAcl
  # Allows outbound return traffic from public subnets for requests originating from Internet.
  NACLRuleAllowCustomTCPEgressPublic:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: 6
      PortRange:
        From: 1025
        To: 65535
      RuleAction: allow
      RuleNumber: 220
      NetworkAclId: !Ref PublicSubnetNetworkAcl

  ### PRIVATE SUBNETS
  ### SBN - PRIVATE SUBNETS - TIER 2
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnetACIDR
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - sbn
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - prv
            - "-"
            - t2 
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  PrivateSubnetRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - rtb
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - prv
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetA
      RouteTableId:
        Ref: PrivateSubnetRouteTableA
  ### Network Access Lists - PRIVATE - TIER 2  
  PrivateSubnetNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - acl
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - prv
            - "-"
            - t2 
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  PrivateSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnetA
      NetworkAclId:
        Ref: PrivateSubnetNetworkAcl
  ### INBOUND TRAFFIC - PRIVATE TIER 2 SUBNETS
  PrivateSubnetNetworkAclEntryInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      NetworkAclId:
        Ref: PrivateSubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
  ### OUTBOUND TRAFFIC - PRIVATE TIER 2 SUBNETS
  PrivateSubnetNetworkAclEntryOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: PrivateSubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'

  ### PRIVATE SUBNETS
  ### SBN - PRIVATE SUBNETS - TIER 3
  SecuredSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: SecuredSubnetACIDR
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - sbn
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - prv
            - "-"
            - t3 
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  SecuredSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SecuredSubnetA
      RouteTableId:
        Ref: PrivateSubnetRouteTableA
  ### Network Access Lists - PRIVATE - TIER 3   
  SecuredSubnetNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - acl
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - prv
            - "-"
            - t3 
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  SecuredSubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SecuredSubnetA
      NetworkAclId:
        Ref: SecuredSubnetNetworkAcl
  ### INBOUND TRAFFIC - PRIVATE TIER 3 SUBNETS
  SecuredSubnetNetworkAclEntryInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      NetworkAclId:
        Ref: SecuredSubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
  ### OUTBOUND TRAFFIC - PRIVATE TIER 3 SUBNETS

  ### MANAGEMENT SUBNETS (Optional)
  ### SBN - MANAGEMENT SUBNETS - TIER 2
  MgtSubnetA:
    Type: AWS::EC2::Subnet
    Condition: CreateResource3
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: MgtSubnetACIDR
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - sbn
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - prv
            - "-"
            - t2
            - "-"
            - mgt            
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter

  ### RTB - MANAGEMENT SUBNETS - ROUTE TABLES
  MgtSubnetRouteTableA:
    Type: AWS::EC2::RouteTable
    Condition: CreateResource3
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - rtb
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - prv
            - "-"
            - mgt
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter

  MgtSubnetARouteTableAssociation:
    Condition: CreateResource3
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: MgtSubnetA
      RouteTableId:
        Ref: MgtSubnetRouteTableA
  ### NACL - MANAGEMENT SUBNETS - INBOUND & OUTBOUND TRAFFIC
  MgtSubnetNetworkAcl:
    Condition: CreateResource3
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - acl
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - prv
            - "-"
            - t2
            - "-"
            - mgt            
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter
  MgtSubnetANetworkAclAssociation:
    Condition: CreateResource3
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: MgtSubnetA
      NetworkAclId:
        Ref: MgtSubnetNetworkAcl
  MgtSubnetNetworkAclEntryInbound:
    Condition: CreateResource3
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      NetworkAclId:
        Ref: MgtSubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
  MgtSubnetNetworkAclEntryOutbound:
    Condition: CreateResource3
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: MgtSubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'

  ### NAT Gateway Configuration
  EIPNatGWazA:
    Type: AWS::EC2::EIP
    Condition: CreateResource1
    Properties:
      Domain: VPC
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - eip
            - "-"            
            - nat
            - "-"
            - aza
      - Key: Business Unit
        Value:
          Ref: BusinessUnit
      - Key: Cost Center
        Value:
          Ref: CostCenter             

  PrivateSubnetRouteA:
    Type: AWS::EC2::Route
    Condition: CreateResource1
    DependsOn: NatGWazA
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGWazA
      RouteTableId: !Ref PrivateSubnetRouteTableA

  MgtSubnetRouteA:
    Type: AWS::EC2::Route
    Condition: CreateResource1
    DependsOn: NatGWazA
    Properties:
      RouteTableId:
        Ref: MgtSubnetRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGWazA
      RouteTableId: !Ref MgtSubnetRouteTableA
      
  ### FLOWLOG
  FlowLogLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: CreateResource2
    Properties:
      LogGroupName:
        Fn::Sub: Vpc-FlowAll-${AWS::StackName}
      RetentionInDays: 90
  FlowLogCWLPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: CreateResource2
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
            Resource: !GetAtt FlowLogLogGroup.Arn

  FlowLogCWLRole:
    Type: AWS::IAM::Role
    Condition: CreateResource2
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - !Ref FlowLogCWLPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "vpc-flow-logs.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  DefaultFlowLog:
    Type: "AWS::EC2::FlowLog"
    Condition: CreateResource2
    Properties:
      DeliverLogsPermissionArn: !GetAtt FlowLogCWLRole.Arn
      LogGroupName:
        Ref: FlowLogLogGroup
      ResourceId:
        Ref: VPC
      ResourceType: VPC
      TrafficType: ALL


Outputs:
  PrivateSubnetACIDR:
    Description: Private subnet CIDR in Availability Zone A
    Value:
      Ref: PrivateSubnetACIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnetACIDR
  PrivateSubnetAID:
    Description: Private subnet ID in Availability Zone A
    Value:
      Ref: PrivateSubnetA
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnetAID
  MgtSubnetAID:
    Description: Management subnet ID in Availability Zone A
    Value:
      Ref: MgtSubnetA
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MgtSubnetAID
  MgtSubnetACIDR:
    Description: Management subnet CIDR in Availability Zone A
    Value:
      Ref: MgtSubnetACIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MgtSubnetACIDR
  SecuredSubnetACIDR:
    Description: Secure subnet CIDR in Availability Zone A
    Value:
      Ref: SecuredSubnetACIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SecuredSubnetACIDR
  SecuredSubnetAID:
    Description: Secure subnet ID in Availability Zone A
    Value:
      Ref: SecuredSubnetA
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SecuredSubnetAID
  PublicSubnetAID:
    Description: Public subnet ID in Availability Zone A
    Value:
      Ref: PublicSubnetA
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PublicSubnetAID
  PrivateSubnetRouteTableA:
    Value:
      Ref: PrivateSubnetRouteTableA
    Description: Private subnet route table A
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnetRouteTableA
  MgtSubnetRouteTableA:
    Value:
      Ref: MgtSubnetRouteTableA
    Description: Management subnet route table A
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MgtSubnetRouteTableA
  PublicSubnetRouteTable:
    Value:
      Ref: PublicSubnetRouteTable
    Description: Public subnet route table
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PublicSubnetRouteTable
  VPCCIDR:
    Value:
      Ref: VPCCIDR
    Description: VPC CIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCCIDR
  VPCID:
    Value:
      Ref: VPC
    Description: VPC ID
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCID
