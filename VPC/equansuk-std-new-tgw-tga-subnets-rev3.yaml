AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  This template creates:
  3 Subnets over 3 Availability Zones for a Transit Gateway Attachment
  1 Route Table over 3 subnets

Metadata:
  Stack:
    Value: 0
  VersionDate:
    Value: 20190725
  Identifier:
    Value: main
  Input:
    Description: Input of all required parameters in the stack
  Output:
    Description: N/A
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General Configuration
      Parameters:
      - VPCID
      - AvailabilityZones
      - Environment
      - NameofRegion
      - Tier
      - PubPriv
      - Meta   
    - Label:
        default: Network Configuration
      Parameters:
      - TGASubnetACIDR
      - TGASubnetBCIDR
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      Environment:
        default: Environment
      NameofRegion:
        default: Region
      Tier:
        default: VPC Tier
      PubPriv:
        default: Public or Private
      Meta:
        default: Subnet Identifier  
      TGASubnetACIDR:
        default: TGA subnet A CIDR - (Internet, only HTTP and HTTPS for Inbound traffic)
      TGASubnetBCIDR:
        default: TGA subnet B CIDR - (Internet, only HTTP and HTTPS for Inbound traffic)
Parameters:
  VPCID:
    Description: "List of VPC's."
    Type: AWS::EC2::VPC::Id
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC.
      Note:The logical order is preserved. Use only 2 AZs!'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  Environment:
    Description: 'Environment type Production = prd; Development = dev; Pre Production = uat'
    AllowedValues:
    - prd
    - dev
    - uat
    Type: String
    Default: dev
  NameofRegion:
    Description: 'Region value used in Name tags string : Ireland = euw1; United Kingdom = euw2"  (example : igw-euw1-dev-xxx)'
    AllowedValues:
    - euw1
    - euw2
    - euw3
    Type: String
    Default: euw2
  TGASubnetACIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/25
    Description: "CIDR block for the public DMZ subnet located in Availability Zone A"
    Type: String
  TGASubnetBCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.128/25
    Description: "CIDR block for the public DMZ subnet located in Availability Zone B"
    Type: String
Resources:
  ### Create Subnets over 3 Availability Zones 
  TGASubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCID
      CidrBlock:
        Ref: TGASubnetACIDR
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - sbn
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - aza
            - "-"
            - tga
  TGASubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCID
      CidrBlock:
        Ref: TGASubnetBCIDR
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Ref: AvailabilityZones
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - sbn
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - azb
            - "-"
            - tga
  ### Create a Route Table over 3 subnets 
  TGASubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCID
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - rtb
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - tga                   
  ### Create a NACL 
  TGASubnetNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPCID
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - ''
          - - acl
            - "-"            
            - Ref: NameofRegion
            - "-"
            - Ref: Environment
            - "-"
            - tga             
  ### INBOUND TRAFFIC
  TGANetworkAclEntryInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'false'
      NetworkAclId:
        Ref: TGASubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
  ### OUTBOUND TRAFFIC
  TGABNetworkAclEntryOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      NetworkAclId:
        Ref: TGASubnetNetworkAcl
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'

  ### Associate Route Tables and NACLs
  TGASubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: TGASubnetA
      RouteTableId:
        Ref: TGASubnetRouteTable
  TGASubnetANetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: TGASubnetA
      NetworkAclId:
        Ref: TGASubnetNetworkAcl
  TGASubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: TGASubnetB
      RouteTableId:
        Ref: TGASubnetRouteTable
  TGASubnetNetworkBAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: TGASubnetB
      NetworkAclId:
        Ref: TGASubnetNetworkAcl
  
Outputs:
  TGASubnetACIDR:
    Description: TGA subnet CIDR in Availability Zone A
    Value:
      Ref: TGASubnetACIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TGASubnetACIDR
  TGASubnetAID:
    Description: TGA subnet ID in Availability Zone A
    Value:
      Ref: TGASubnetA
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TGASubnetAID
  TGASubnetBCIDR:
    Description: TGA subnet CIDR in Availability Zone B
    Value:
      Ref: TGASubnetBCIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TGASubnetBCIDR
  TGASubnetBID:
    Description: TGA subnet ID in Availability Zone B
    Value:
      Ref: TGASubnetB
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TGASubnetBID 
  TGASubnetRouteTable:
    Value:
      Ref: TGASubnetRouteTable
    Description: TGA subnet route table
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-TGASubnetRouteTable
